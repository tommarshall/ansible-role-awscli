---
# Setup/install tasks.

- include: setup-RedHat.yml
  when: ansible_os_family == 'RedHat'

- include: setup-Debian.yml
  when: ansible_os_family == 'Debian'

- name: "Ensure pip is upgraded to the latest level"
  pip:
    name: [ "pip"]
    state: forcereinstall
    virtualenv: "{{ pyenv_virtualenv_path }}"
    extra_args: "{{ pyenv_pip_extra_args }}"
  become: true
  tags: [pip]

- name: Ensure botocore and boto3 modules are installed
  pip:
    name: [ "boto", "boto3", "botocore"]
    virtualenv: "{{ pyenv_virtualenv_path }}"
    extra_args: "{{ pyenv_pip_extra_args }}"
  become: true
  tags: [pip]

- name: Install awscli via pip.
  pip: 
    name: "awscli" 
    version: "{{ awscli_version }}"
    virtualenv: "{{ pyenv_virtualenv_path }}"
    extra_args: "{{ pyenv_pip_extra_args }}"
  become: true
  tags: [pip]


- name: Ensure the users' .aws directory exists.
  file:
    path: "~/.aws"
    state: directory
    owner: "{{ item.username }}"
    group: "{{ item.group | default(item.username) }}"
  become: yes
  become_user: "{{ item.username }}"
  with_items: "{{ awscli_users }}"

- name: Create the users' .aws/config file.
  template:
    src: aws_config.j2
    dest: "~/.aws/config"
    owner: "{{ item.username }}"
    group: "{{ item.group | default(item.username) }}"
    mode: 0600
  become: yes
  become_user: "{{ item.username }}"
  with_items: "{{ awscli_users }}"

- name: Create the users' .aws/credentials file.
  template:
    src: aws_credentials.j2
    dest: "~/.aws/credentials"
    owner: "{{ item.username }}"
    group: "{{ item.group | default(item.username) }}"
    mode: 0600
  become: yes
  become_user: "{{ item.username }}"
  with_items: "{{ awscli_users }}"
